events {
    worker_connections 1024;  # Specifies the maximum number of simultaneous connections per worker
}

http {
    server {
        proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=100m inactive=60m;

        listen 80;
        server_name api.kryptosai.pro;  # Replace with your domain

        return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;
        server_name api.kryptosai.pro;  # Replace with your domain

        ssl_certificate /etc/nginx/certs/fullchain.pem;  # Path to your SSL cert
        ssl_certificate_key /etc/nginx/certs/privkey.pem;  # Path to your SSL key
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256';

        # Optional: Add HSTS for security
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            proxy_pass http://rest-api:8080;  # Proxy to your rest-api service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache my_cache;
            proxy_cache_valid 200 1h;
        }
    }
}
